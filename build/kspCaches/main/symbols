{"src/main/kotlin/com/example/blank/entity/UserEntity.kt":["username:com.example.blank.entity.UserEntity","rating:com.example.blank.entity.UserEntity","createdAt:com.example.blank.entity.UserEntity","id:com.example.blank.entity.UserEntity","updatedAt:com.example.blank.entity.UserEntity","updateTimestamp:com.example.blank.entity","toDto:com.example.blank.entity","UserEntity:com.example.blank.entity","profileData:com.example.blank.entity.UserEntity","streak:com.example.blank.entity.UserEntity","telegramId:com.example.blank.entity.UserEntity","fullName:com.example.blank.entity.UserEntity"],"src/main/kotlin/com/example/blank/entity/TestEntity.kt":["contentType:com.example.blank.entity.TestEntity","questions:com.example.blank.entity.TestEntity","TestEntity:com.example.blank.entity","difficulty:com.example.blank.entity.TestEntity","createdAt:com.example.blank.entity.TestEntity","updateTimestamp:com.example.blank.entity","toDto:com.example.blank.entity","id:com.example.blank.entity.TestEntity","updatedAt:com.example.blank.entity.TestEntity","answers:com.example.blank.entity.TestEntity"],"src/main/kotlin/com/example/blank/service/UserTestResultService.kt":["deleteUserTestResultById:com.example.blank.service.UserTestResultService","getAllUserTestResultsByUserId:com.example.blank.service.UserTestResultService","getUserTestResultByUserIdAndTestId:com.example.blank.service.UserTestResultService","userTestResultRepository:com.example.blank.service.UserTestResultService","updateUserTestResultResult:com.example.blank.service.UserTestResultService","UserTestResultService:com.example.blank.service","UserTestResultNotFoundException:com.example.blank.service","getAllUserTestResultsByTestId:com.example.blank.service.UserTestResultService","getAllUserTestResultsByTestIdAndScore:com.example.blank.service.UserTestResultService","addUserTestResult:com.example.blank.service.UserTestResultService","getUserTestResultById:com.example.blank.service.UserTestResultService"],"src/main/kotlin/com/example/blank/dto/UserTestResultDto.kt":["toEntity:com.example.blank.dto","firstCompletedAt:com.example.blank.dto.UserTestResultDto","UserTestResultDto:com.example.blank.dto","score:com.example.blank.dto.UserTestResultDto","testId:com.example.blank.dto.UserTestResultDto","userId:com.example.blank.dto.UserTestResultDto","time:com.example.blank.dto.UserTestResultDto","count:com.example.blank.dto.UserTestResultDto","lastCompletedAt:com.example.blank.dto.UserTestResultDto"],"src/main/kotlin/com/example/blank/service/UserService.kt":["updateUserProfileData:com.example.blank.service.UserService","updateUserRating:com.example.blank.service.UserService","getUserById:com.example.blank.service.UserService","UserService:com.example.blank.service","userRepository:com.example.blank.service.UserService","deleteUserByTelegramId:com.example.blank.service.UserService","updateUserUsername:com.example.blank.service.UserService","getAllUsersByStreak:com.example.blank.service.UserService","getAllUsersByRating:com.example.blank.service.UserService","addUser:com.example.blank.service.UserService","getUserByTelegramId:com.example.blank.service.UserService","deleteUserById:com.example.blank.service.UserService","updateUserFullName:com.example.blank.service.UserService","UserNotFoundException:com.example.blank.service","updateUserStreak:com.example.blank.service.UserService"],"src/main/kotlin/com/example/blank/entity/UserTestResultEntity.kt":["updateTimestamp:com.example.blank.entity","toDto:com.example.blank.entity","userId:com.example.blank.entity.UserTestResultEntity","count:com.example.blank.entity.UserTestResultEntity","score:com.example.blank.entity.UserTestResultEntity","UserTestResultEntity:com.example.blank.entity","id:com.example.blank.entity.UserTestResultEntity","firstCompletedAt:com.example.blank.entity.UserTestResultEntity","time:com.example.blank.entity.UserTestResultEntity","lastCompletedAt:com.example.blank.entity.UserTestResultEntity","testId:com.example.blank.entity.UserTestResultEntity"],"src/main/kotlin/com/example/blank/dto/ActivityLogDto.kt":["toEntity:com.example.blank.dto","ActivityLogDto:com.example.blank.dto","details:com.example.blank.dto.ActivityLogDto","action:com.example.blank.dto.ActivityLogDto","createdAt:com.example.blank.dto.ActivityLogDto","userId:com.example.blank.dto.ActivityLogDto"],"src/main/kotlin/com/example/blank/service/TestService.kt":["getAllTestsByDifficulty:com.example.blank.service.TestService","addTest:com.example.blank.service.TestService","TestService:com.example.blank.service","deleteTestsByContentType:com.example.blank.service.TestService","updateTestDifficulty:com.example.blank.service.TestService","getAllTestsByContentType:com.example.blank.service.TestService","TestNotFoundException:com.example.blank.service","updateTestQuestions:com.example.blank.service.TestService","deleteTestById:com.example.blank.service.TestService","updateTestAnswers:com.example.blank.service.TestService","testRepository:com.example.blank.service.TestService","getTestById:com.example.blank.service.TestService","deleteTestsByDifficulty:com.example.blank.service.TestService"],"src/main/kotlin/com/example/blank/entity/TopicEntity.kt":["TopicEntity:com.example.blank.entity","id:com.example.blank.entity.TopicEntity","updateTimestamp:com.example.blank.entity","toDto:com.example.blank.entity","name:com.example.blank.entity.TopicEntity","description:com.example.blank.entity.TopicEntity","createdBy:com.example.blank.entity.TopicEntity","updatedAt:com.example.blank.entity.TopicEntity","createdAt:com.example.blank.entity.TopicEntity"],"src/main/kotlin/com/example/blank/repository/ActivityLogRepository.kt":["deleteAllByAction:com.example.blank.repository.ActivityLogRepository","ActivityLogRepository:com.example.blank.repository","deleteAllByCreatedAtBefore:com.example.blank.repository.ActivityLogRepository","findAllByUserId:com.example.blank.repository.ActivityLogRepository","deleteById:com.example.blank.repository.ActivityLogRepository","findById:com.example.blank.repository.ActivityLogRepository","findAllByAction:com.example.blank.repository.ActivityLogRepository","deleteAllByUserId:com.example.blank.repository.ActivityLogRepository"],"src/main/kotlin/com/example/blank/entity/ContentEntity.kt":["type:com.example.blank.entity.ContentEntity","updateTimestamp:com.example.blank.entity","toDto:com.example.blank.entity","updatedAt:com.example.blank.entity.ContentEntity","id:com.example.blank.entity.ContentEntity","topicId:com.example.blank.entity.ContentEntity","createdAt:com.example.blank.entity.ContentEntity","ContentEntity:com.example.blank.entity","contentData:com.example.blank.entity.ContentEntity"],"src/main/kotlin/com/example/blank/repository/ContentRepository.kt":["findAllByTopicId:com.example.blank.repository.ContentRepository","deleteAllByType:com.example.blank.repository.ContentRepository","findById:com.example.blank.repository.ContentRepository","ContentRepository:com.example.blank.repository","findAllByType:com.example.blank.repository.ContentRepository","deleteAllByTopicId:com.example.blank.repository.ContentRepository"],"build/generated/ksp/main/kotlin/eu/vendeli/tgbot/generated/BotCtx.kt":["get:eu.vendeli.tgbot.generated","classData:eu.vendeli.tgbot.generated","userData:eu.vendeli.tgbot.generated","____clearClassData:eu.vendeli.tgbot.generated","set:eu.vendeli.tgbot.generated"],"src/main/kotlin/com/example/blank/repository/TopicRepository.kt":["findAllByCreatedBy:com.example.blank.repository.TopicRepository","deleteById:com.example.blank.repository.TopicRepository","deleteAllByCreatedBy:com.example.blank.repository.TopicRepository","findById:com.example.blank.repository.TopicRepository","findByName:com.example.blank.repository.TopicRepository","deleteByName:com.example.blank.repository.TopicRepository","TopicRepository:com.example.blank.repository"],"src/main/kotlin/com/example/blank/entity/ActivityLogEntity.kt":["ActivityLogEntity:com.example.blank.entity","createdAt:com.example.blank.entity.ActivityLogEntity","toDto:com.example.blank.entity","id:com.example.blank.entity.ActivityLogEntity","userId:com.example.blank.entity.ActivityLogEntity","action:com.example.blank.entity.ActivityLogEntity","details:com.example.blank.entity.ActivityLogEntity"],"src/main/kotlin/com/example/blank/dto/UserDto.kt":["toEntity:com.example.blank.dto","fullName:com.example.blank.dto.UserDto","profileData:com.example.blank.dto.UserDto","updatedAt:com.example.blank.dto.UserDto","streak:com.example.blank.dto.UserDto","telegramId:com.example.blank.dto.UserDto","UserDto:com.example.blank.dto","createdAt:com.example.blank.dto.UserDto","username:com.example.blank.dto.UserDto","rating:com.example.blank.dto.UserDto"],"src/main/kotlin/com/example/blank/TgBotApplication.kt":["TgBotApplication:com.example.blank","telegramBot:com.example.blank.TgBotApplication","onApplicationEvent:com.example.blank.TelegramBotStarter","TelegramBotStarter:com.example.blank","main:com.example.blank","<init>:com.example.blank.TgBotApplication"],"src/main/kotlin/com/example/blank/config/JpaConfig.kt":["JsonConverter:com.example.blank.config.JpaConfig","JpaConfig:com.example.blank.config","<init>:com.example.blank.config.JpaConfig","<init>:com.example.blank.config.JpaConfig.Companion","convertToDatabaseColumn:com.example.blank.config.JpaConfig.JsonConverter","Companion:com.example.blank.config.JpaConfig","convertToEntityAttribute:com.example.blank.config.JpaConfig.JsonConverter","<init>:com.example.blank.config.JpaConfig.JsonConverter"],"src/main/kotlin/com/example/blank/service/ContentService.kt":["deleteContentByTopicId:com.example.blank.service.ContentService","ContentNotFoundException:com.example.blank.service","addContent:com.example.blank.service.ContentService","updateContentData:com.example.blank.service.ContentService","ContentService:com.example.blank.service","getContentById:com.example.blank.service.ContentService","getContentByTopicId:com.example.blank.service.ContentService","deleteContentById:com.example.blank.service.ContentService","updateContentType:com.example.blank.service.ContentService","getAllContentByType:com.example.blank.service.ContentService","deleteAllContentByType:com.example.blank.service.ContentService","contentRepository:com.example.blank.service.ContentService"],"src/main/kotlin/com/example/blank/repository/TestRepository.kt":["findAllByContentType:com.example.blank.repository.TestRepository","findAllByDifficulty:com.example.blank.repository.TestRepository","findById:com.example.blank.repository.TestRepository","deleteAllByDifficulty:com.example.blank.repository.TestRepository","TestRepository:com.example.blank.repository","deleteAllByContentType:com.example.blank.repository.TestRepository","deleteById:com.example.blank.repository.TestRepository"],"src/main/kotlin/com/example/blank/entity/UserTopicEntity.kt":["UserTopicEntity:com.example.blank.entity","toDto:com.example.blank.entity","selectedAt:com.example.blank.entity.UserTopicEntity","userId:com.example.blank.entity.UserTopicEntity","id:com.example.blank.entity.UserTopicEntity","topicId:com.example.blank.entity.UserTopicEntity"],"src/main/kotlin/com/example/blank/dto/ContentDto.kt":["toEntity:com.example.blank.dto","type:com.example.blank.dto.ContentDto","ContentDto:com.example.blank.dto","updatedAt:com.example.blank.dto.ContentDto","contentData:com.example.blank.dto.ContentDto","topicId:com.example.blank.dto.ContentDto","createdAt:com.example.blank.dto.ContentDto"],"src/main/kotlin/com/example/blank/controller/StartController.kt":["rules:com.example.blank.controller.StartController","<init>:com.example.blank.controller.StartController","StartController:com.example.blank.controller","loadRules:com.example.blank.controller","start:com.example.blank.controller.StartController"],"src/main/kotlin/com/example/blank/dto/TopicDto.kt":["toEntity:com.example.blank.dto","createdBy:com.example.blank.dto.TopicDto","updatedAt:com.example.blank.dto.TopicDto","createdAt:com.example.blank.dto.TopicDto","description:com.example.blank.dto.TopicDto","TopicDto:com.example.blank.dto","name:com.example.blank.dto.TopicDto"],"src/main/kotlin/com/example/blank/dto/TestDto.kt":["toEntity:com.example.blank.dto","TestDto:com.example.blank.dto","updatedAt:com.example.blank.dto.TestDto","difficulty:com.example.blank.dto.TestDto","answers:com.example.blank.dto.TestDto","createdAt:com.example.blank.dto.TestDto","contentType:com.example.blank.dto.TestDto","questions:com.example.blank.dto.TestDto"],"src/main/kotlin/com/example/blank/service/TopicService.kt":["TopicService:com.example.blank.service","deleteTopicsByCreatedBy:com.example.blank.service.TopicService","topicRepository:com.example.blank.service.TopicService","getTopicByName:com.example.blank.service.TopicService","updateTopicName:com.example.blank.service.TopicService","getTopicById:com.example.blank.service.TopicService","deleteTopicById:com.example.blank.service.TopicService","addTopic:com.example.blank.service.TopicService","TopicNotFoundException:com.example.blank.service","getAllTopicsByCreatedBy:com.example.blank.service.TopicService","deleteTopicByName:com.example.blank.service.TopicService","updateTopicDescription:com.example.blank.service.TopicService"],"src/main/kotlin/com/example/blank/service/UserTopicService.kt":["UserTopicNotFoundException:com.example.blank.service","getAllUserTopicsByTopicId:com.example.blank.service.UserTopicService","deleteUserTopicById:com.example.blank.service.UserTopicService","getAllUserTopicsByUserId:com.example.blank.service.UserTopicService","getUserTopicById:com.example.blank.service.UserTopicService","addUserTopic:com.example.blank.service.UserTopicService","userTopicRepository:com.example.blank.service.UserTopicService","UserTopicService:com.example.blank.service"],"build/generated/ksp/main/kotlin/eu/vendeli/tgbot/generated/ActivitiesData.kt":["__ACTIVITIES:eu.vendeli.tgbot.generated"],"src/main/kotlin/com/example/blank/repository/UserTopicRepository.kt":["findAllByTopicId:com.example.blank.repository.UserTopicRepository","findAllByUserId:com.example.blank.repository.UserTopicRepository","UserTopicRepository:com.example.blank.repository","deleteById:com.example.blank.repository.UserTopicRepository","findById:com.example.blank.repository.UserTopicRepository"],"src/main/kotlin/com/example/blank/repository/UserTestResultRepository.kt":["findAllByUserId:com.example.blank.repository.UserTestResultRepository","findAllByTestIdAndScore:com.example.blank.repository.UserTestResultRepository","findById:com.example.blank.repository.UserTestResultRepository","findByUserIdAndTestId:com.example.blank.repository.UserTestResultRepository","deleteById:com.example.blank.repository.UserTestResultRepository","findAllByTestId:com.example.blank.repository.UserTestResultRepository","UserTestResultRepository:com.example.blank.repository"],"src/main/kotlin/com/example/blank/repository/UserRepository.kt":["UserRepository:com.example.blank.repository","findAllByRating:com.example.blank.repository.UserRepository","findById:com.example.blank.repository.UserRepository","deleteById:com.example.blank.repository.UserRepository","findByTelegramId:com.example.blank.repository.UserRepository","findAllByStreak:com.example.blank.repository.UserRepository","deleteByTelegramId:com.example.blank.repository.UserRepository"],"src/main/kotlin/com/example/blank/service/ActivityLogService.kt":["deleteActivityLogById:com.example.blank.service.ActivityLogService","deleteAllActivityLogsByAction:com.example.blank.service.ActivityLogService","ActivityLogService:com.example.blank.service","getAllActivityLogsByAction:com.example.blank.service.ActivityLogService","deleteAllActivityLogsOlderThan:com.example.blank.service.ActivityLogService","ActivityLogNotFoundException:com.example.blank.service","getActivityLogById:com.example.blank.service.ActivityLogService","addActivityLog:com.example.blank.service.ActivityLogService","activityLogRepository:com.example.blank.service.ActivityLogService","deleteAllActivityLogsByUserId:com.example.blank.service.ActivityLogService","getAllActivityLogsByUserId:com.example.blank.service.ActivityLogService"],"src/main/kotlin/com/example/blank/dto/UserTopicDto.kt":["UserTopicDto:com.example.blank.dto","toEntity:com.example.blank.dto","topicId:com.example.blank.dto.UserTopicDto","selectedAt:com.example.blank.dto.UserTopicDto","userId:com.example.blank.dto.UserTopicDto"]}